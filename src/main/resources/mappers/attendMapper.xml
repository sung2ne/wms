<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="attend">

	<resultMap id="attend" type="wms.domain.AttendVo">
		<!-- 학생정보 -->
		<result property="studentId" 				column="STUDENT_ID" />					<!-- 학생 ID -->
		<result property="studentName"				column="STUDENT_NAME" />				<!-- 학생 이름 -->
		<result property="studentPhone" 			column="STUDENT_PHONE" />				<!-- 학생 핸드폰 -->
		<result property="studentEmail" 			column="STUDENT_EMAIL" />				<!-- 학생 이메일 -->
		<result property="studentDepartmentName" 	column="STUDENT_DEPARTMENT_NAME" />		<!-- 학생 학과 이름 -->
		<!-- 출결결과 -->
		<result property="attendIdx" 				column="ATTEND_IDX" />					<!-- 출결결과 IDX -->
		<result property="studentIdx"				column="STUDNET_IDX" />					<!-- 학생 IDX -->
		<result property="attendYNL" 				column="ATTEND_YNL" />					<!-- 출석여부 -->
		<!-- BLE출결 -->
		<result property="bleRequestIdx" 			column="BLE_REQUEST_IDX" />				<!-- BLE출결 IDX -->
		<result property="uuid"						column="UUID" />						<!-- UUID -->
		<result property="requestDatetime" 			column="REQUEST_DATETIME" />			<!-- 출석 요청 일시 -->
		<result property="recognitionDatetime" 		column="RECOGNITION_DATETIME" />		<!-- 출석 인정 일시 -->
		<!-- 수업 스케줄 -->
		<result property="scheduleIdx" 				column="SCHEDULE_IDX" />				<!-- 스케줄 IDX -->
		<result property="week"						column="WEEK" />						<!-- 주차 -->
		<result property="scheduleDate" 			column="SCHEDULE_DATE" />				<!-- 스케줄 날짜 -->
		<!-- 시간 -->
		<result property="scheduletimeIdx" 			column="SCHEDULETIME_IDX" />			<!-- 시간 IDX -->
		<result property="classTime"				column="CLASS_TIME" />					<!-- 교시 -->
		<result property="startTime" 				column="START_TIME" />					<!-- 시작 시간 -->
		<result property="endTime" 					column="END_TIME" />					<!-- 종료 시간 -->
		<!-- 수강 학생 -->
		<result property="classroomStudentIdx" 		column="CLASSROOM_STUDENT_IDX" />		<!-- 수강 학생 IDX -->
		<result property="studentIdx"				column="STUDENT_IDX" />					<!-- 학생 IDX -->
		<result property="studentName" 				column="STUDENT_NAME" />				<!-- 학생 이름 -->
		<result property="studentId" 				column="STUDENT_ID" />					<!-- 학생 ID -->
		<result property="studentPhone" 			column="STUDENT_PHONE" />				<!-- 학생 전화번호 -->
		<result property="studentEmail" 			column="STUDENT_EMAIL" />				<!-- 학생 이메일 -->
		<!-- 교수별 교과목 -->
		<result property="classroomIdx" 			column="CLASSROOM_IDX" />				<!-- 교수별 교과목 IDX -->
		<result property="professorIdx"				column="PROFESSOR_IDX" />				<!-- 교수 IDX -->
		<result property="professorName"			column="PROFESSOR_NAME" />				<!-- 교수 이름 -->
		<result property="classroom"				column="CLASSROOM" />					<!-- 분반 -->
		<!-- 대학 -->
		<result property="collegeIdx" 				column="COLLEGE_IDX" />					<!-- 대학 IDX -->
		<result property="collegeName" 				column="COLLEGE_NAME" />				<!-- 대학 이름 -->
		<!-- 학과 -->
		<result property="departmentIdx" 			column="DEPARTMENT_IDX" />				<!-- 학과 IDX -->
		<result property="departmentName"	 		column="DEPARTMENT_NAME" />				<!-- 학과 이름 -->
		<!-- 년도/학기 -->
		<result property="yearSemesterIdx" 			column="YEAR_SEMESTER_IDX" />			<!-- 년도/학기 IDX -->
		<result property="year" 					column="YEAR" />						<!-- 년도 -->
		<result property="semester"	 				column="SEMESTER" />					<!-- 학기 -->
		<result property="startDateTime"	 		column="START_DATETIME" />				<!-- 시작 일시 -->
		<result property="endDateTime"		 		column="END_DATETIME" />				<!-- 종료 일시 -->
		<!-- 교과목 -->
		<result property="subjectIdx" 				column="SUBJECT_IDX" />					<!-- 교과목 IDX -->
		<result property="subjectName" 				column="SUBJECT_NAME" />				<!-- 교과목 이름 -->
		<!-- 등록, 수정, 삭제 -->
		<result property="useYN" 					column="USE_YN" />						<!-- 사용여부, Y:사용, N:사용안함 -->
		<result property="deleteYN" 				column="DELETE_YN" />					<!-- 삭제여부, Y:삭제, N:삭제안함 -->
		<result property="createUserIdx" 			column="CREATE_USER_IDX" />				<!-- 생생한 사용자 IDX -->
		<result property="updateUserIdx" 			column="UPDATE_USER_IDX" />				<!-- 수정한 사용자 IDX -->
		<result property="deleteUserIdx" 			column="DELETE_USER_IDX" />				<!-- 삭제한 사용자 IDX -->
		<result property="createUserName" 			column="CREATE_USER_NAME" />			<!-- 생생한 사용자 이름 -->
		<result property="updateUserName" 			column="UPDATE_USER_NAME" />			<!-- 수정한 사용자 이름 -->
		<result property="deleteUserName" 			column="DELETE_USER_NAME" />			<!-- 삭제한 사용자 이름 -->
		<result property="createDateTime"	 		column="CREATE_DATETIME" />				<!-- 생성한 일시 -->
		<result property="updateDateTime"	 		column="UPDATE_DATETIME" />				<!-- 수정한 일시 -->
		<result property="deleteDateTime"	 		column="DELETE_DATETIME" />				<!-- 삭제한 일시 -->
	</resultMap>

	<!-- 추가 -->
	<insert id="create">
		<![CDATA[
		INSERT INTO TB_ATTEND (
			ATTEND_IDX
			, BLE_REQUEST_IDX
			, STUDENT_IDX
			, ATTEND_YNL
			, USE_YN, DELETE_YN, CREATE_USER_IDX, CREATE_DATETIME
		) VALUES (
			#{attendIdx}
			, #{bleRequestIdx}
			, #{studentIdx}
			, #{attendYNL}
			, #{useYN}, #{deleteYN}, #{createUserIdx}, #{createDateTime}
		)
		]]>
	</insert>

	<!-- 보기 -->
	<select id="read" resultMap="attend">
		<![CDATA[
		SELECT
			T_ATTEND.ATTEND_IDX
			, T_ATTEND.BLE_REQUEST_IDX
			, T_ATTEND.STUDENT_IDX
			, T_ATTEND.ATTEND_YNL
			, T_ATTEND.USE_YN
			, T_ATTEND.DELETE_YN
			, T_ATTEND.CREATE_USER_IDX
			, T_ATTEND.UPDATE_USER_IDX
			, T_ATTEND.DELETE_USER_IDX
			, T_ATTEND.UPDATE_DATETIME
			, T_ATTEND.CREATE_DATETIME
			, T_ATTEND.DELETE_DATETIME
			, T_USER_CREATE.USER_NAME AS CREATE_USER_NAME
			, T_USER_UPDATE.USER_NAME AS UPDATE_USER_NAME
			, T_USER_DELETE.USER_NAME AS DELETE_USER_NAME
			, T_STUDENT.USER_ID AS STUDENT_ID
			, T_STUDENT.USER_NAME AS STUDENT_NAME
			, T_STUDENT.USER_PHONE AS STUDENT_PHONE
			, T_STUDENT.EMAIL AS STUDENT_EMAIL
			, T_DEPARTMENT.DEPARTMENT_NAME AS STUDENT_DEPARTMENT_NAME
		FROM TB_ATTEND AS T_ATTEND
		LEFT JOIN TB_BLEREQUEST AS T_BLEREQUEST ON T_BLEREQUEST.BLE_REQUEST_IDX = T_ATTEND.BLE_REQUEST_IDX
		LEFT JOIN TB_USER AS T_STUDENT ON T_STUDENT.USER_IDX = T_ATTEND.STUDENT_IDX
		LEFT JOIN TB_DEPARTMENT AS T_DEPARTMENT ON T_DEPARTMENT.DEPARTMENT_IDX = T_STUDENT.DEPARTMENT_IDX
		LEFT JOIN TB_USER AS T_USER_CREATE ON T_USER_CREATE.USER_IDX = T_ATTEND.CREATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_UPDATE ON T_USER_UPDATE.USER_IDX = T_ATTEND.UPDATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_DELETE ON T_USER_DELETE.USER_IDX = T_ATTEND.DELETE_USER_IDX
		WHERE T_ATTEND.ATTEND_IDX = #{attendIdx}
		LIMIT 1
		]]>
	</select>

	<!-- 수정 -->
	<select id="update">
		<![CDATA[
		UPDATE TB_ATTEND SET ATTEND_IDX = #{attendIdx}
		]]>
		<if test=" bleRequestIdx != null">
			, BLE_REQUEST_IDX = #{bleRequestIdx}
		</if>
		<if test=" studentIdx != null">
			, STUDENT_IDX = #{studentIdx}
		</if>
		<if test=" attendYNL != null">
			, ATTEND_YNL = #{attendYNL}
		</if>
		<if test="useYN != null">
			, USE_YN = #{useYN}
		</if>
		<if test="updateUserIdx != null">
			, UPDATE_USER_IDX = #{updateUserIdx}, UPDATE_DATETIME = #{updateDateTime}
		</if>
		<choose>
			<when test="deleteYN != null and deleteYN == 'Y'.toString()">
				, DELETE_YN = #{deleteYN}, DELETE_USER_IDX = #{deleteUserIdx}, DELETE_DATETIME = #{deleteDateTime}
			</when>
			<when test="deleteYN != null and deleteYN == 'N'.toString()">
				, DELETE_YN = #{deleteYN}, DELETE_USER_IDX = "", DELETE_DATETIME = ""
			</when>
		</choose>
		WHERE ATTEND_IDX = #{attendIdx}
	</select>

	<!-- 목록 -->
	<select id="all" resultMap="attend">
		<![CDATA[
		SELECT
			T_ATTEND.ATTEND_IDX
			, T_ATTEND.BLE_REQUEST_IDX
			, T_ATTEND.STUDENT_IDX
			, T_ATTEND.ATTEND_YNL
			, T_ATTEND.USE_YN
			, T_ATTEND.DELETE_YN
			, T_ATTEND.CREATE_USER_IDX
			, T_ATTEND.UPDATE_USER_IDX
			, T_ATTEND.DELETE_USER_IDX
			, T_ATTEND.UPDATE_DATETIME
			, T_ATTEND.CREATE_DATETIME
			, T_ATTEND.DELETE_DATETIME
			, T_USER_CREATE.USER_NAME AS CREATE_USER_NAME
			, T_USER_UPDATE.USER_NAME AS UPDATE_USER_NAME
			, T_USER_DELETE.USER_NAME AS DELETE_USER_NAME
			, T_STUDENT.USER_ID AS STUDENT_ID
			, T_STUDENT.USER_NAME AS STUDENT_NAME
			, T_STUDENT.USER_PHONE AS STUDENT_PHONE
			, T_STUDENT.EMAIL AS STUDENT_EMAIL
			, T_DEPARTMENT.DEPARTMENT_NAME AS STUDENT_DEPARTMENT_NAME
		FROM TB_ATTEND AS T_ATTEND
 		LEFT JOIN TB_BLEREQUEST AS T_BLEREQUEST ON T_BLEREQUEST.BLE_REQUEST_IDX = T_ATTEND.BLE_REQUEST_IDX
		LEFT JOIN TB_USER AS T_STUDENT ON T_STUDENT.USER_IDX = T_ATTEND.STUDENT_IDX
		LEFT JOIN TB_DEPARTMENT AS T_DEPARTMENT ON T_DEPARTMENT.DEPARTMENT_IDX = T_STUDENT.DEPARTMENT_IDX
		LEFT JOIN TB_USER AS T_USER_CREATE ON T_USER_CREATE.USER_IDX = T_ATTEND.CREATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_UPDATE ON T_USER_UPDATE.USER_IDX = T_ATTEND.UPDATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_DELETE ON T_USER_DELETE.USER_IDX = T_ATTEND.DELETE_USER_IDX
		WHERE 1=1
		]]>
		<if test="useYN != null">
			AND T_ATTEND.USE_YN = #{useYN}
		</if>
		<if test="deleteYN != null">
			AND T_ATTEND.DELETE_YN = #{deleteYN}
		</if>
		<if test="bleRequestIdx != null">
			AND T_ATTEND.BLE_REQUEST_IDX = #{bleRequestIdx}
		</if>
		ORDER BY T_ATTEND.ATTEND_IDX DESC
	</select>

</mapper>
