<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">

	<resultMap id="user" type="wms.domain.UserVo">
		<!-- 사용자 -->
		<result property="userIdx"				column="USER_IDX" />			<!-- 사용자 IDX -->
		<result property="userId"				column="USER_ID" />				<!-- 사용자 ID -->
		<result property="password" 			column="PASSWORD" />			<!-- 사용자 비밀번호 -->
		<result property="userName" 			column="USER_NAME" />			<!-- 사용자 이름 -->
		<result property="phone"	 			column="PHONE" />				<!-- 사용자 전화번호 -->
		<result property="mobile"	 			column="MOBILE" />				<!-- 사용자 핸드폰번호 -->
		<result property="email" 				column="EMAIL" />				<!-- 사용자 이메일 -->
		<result property="grade"	 			column="GRADE" />				<!-- 사용자 권한, A:시스템관리자, CA:업체관리자, CU:업체사용자 -->
		<!-- 부서 -->
		<result property="departmentIdx" 		column="DEPARTMENT_IDX" />		<!-- 부서 IDX -->
		<result property="departmentName"	 	column="DEPARTMENT_NAME" />		<!-- 부서 이름 -->
		<!-- 등록, 수정, 삭제 -->
		<result property="deleteYN" 			column="DELETE_YN" />			<!-- 삭제여부, Y:삭제, N:삭제안함 -->
		<result property="createUserIdx" 		column="CREATE_USER_IDX" />		<!-- 생생한 사용자 IDX -->
		<result property="updateUserIdx" 		column="UPDATE_USER_IDX" />		<!-- 수정한 사용자 IDX -->
		<result property="deleteUserIdx" 		column="DELETE_USER_IDX" />		<!-- 삭제한 사용자 IDX -->
		<result property="createUserName" 		column="CREATE_USER_NAME" />	<!-- 생생한 사용자 이름 -->
		<result property="updateUserName" 		column="UPDATE_USER_NAME" />	<!-- 수정한 사용자 이름 -->
		<result property="deleteUserName" 		column="DELETE_USER_NAME" />	<!-- 삭제한 사용자 이름 -->
		<result property="createDateTime"	 	column="CREATE_DATE_TIME" />		<!-- 생성한 일시 -->
		<result property="updateDateTime"	 	column="UPDATE_DATE_TIME" />		<!-- 수정한 일시 -->
		<result property="deleteDateTime"	 	column="DELETE_DATE_TIME" />		<!-- 삭제한 일시 -->
	</resultMap>

	<!-- 추가 -->
	<insert id="create">
		<![CDATA[
		INSERT INTO TB_USER (
			USER_IDX
			, DEPARTMENT_IDX
			, USER_ID
			, PASSWORD
			, USER_NAME
			, PHONE
			, MOBILE
			, EMAIL
			, GRADE
			, DELETE_YN, CREATE_USER_IDX, CREATE_DATE_TIME
		) VALUES (
			#{userIdx}
			, #{departmentIdx}
			, #{userId}
			, #{password}
			, #{userName}
			, #{phone}
			, #{mobile}
			, #{email}
			, #{grade}
			, #{deleteYN}, #{createUserIdx}, #{createDateTime}
		)
		]]>
	</insert>

	<!-- 보기 -->
	<select id="read" resultMap="user">
		<![CDATA[
		SELECT
		 	T_USER.USER_IDX
		 	, T_USER.DEPARTMENT_IDX
		 	, T_USER.USER_ID
			, T_USER.USER_NAME
			, T_USER.PASSWORD
			, T_USER.PHONE
			, T_USER.MOBILE
			, T_USER.EMAIL
			, T_USER.GRADE
			, T_USER.DELETE_YN
			, T_USER.CREATE_USER_IDX
			, T_USER.UPDATE_USER_IDX
			, T_USER.DELETE_USER_IDX
			, T_USER.UPDATE_DATE_TIME
			, T_USER.CREATE_DATE_TIME
			, T_USER.DELETE_DATE_TIME
			, T_USER_CREATE.USER_NAME AS CREATE_USER_NAME
			, T_USER_UPDATE.USER_NAME AS UPDATE_USER_NAME
			, T_USER_DELETE.USER_NAME AS DELETE_USER_NAME
			, T_DEPARTMENT.DEPARTMENT_NAME
		FROM TB_USER AS T_USER
		LEFT JOIN TB_DEPARTMENT AS T_DEPARTMENT ON T_DEPARTMENT.DEPARTMENT_IDX = T_USER.DEPARTMENT_IDX
		LEFT JOIN TB_USER AS T_USER_CREATE ON T_USER_CREATE.USER_IDX = T_DEPARTMENT.CREATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_UPDATE ON T_USER_UPDATE.USER_IDX = T_DEPARTMENT.UPDATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_DELETE ON T_USER_DELETE.USER_IDX = T_DEPARTMENT.DELETE_USER_IDX
		WHERE 1=1
		]]>
		<if test='userIdx != null'>
			AND T_USER.USER_IDX = #{userIdx}
		</if>
		<if test='userId != null'>
			AND T_USER.USER_ID = #{userId}
		</if>
		LIMIT 1
	</select>

	<!-- 수정 -->
	<select id="update">
		<![CDATA[
		UPDATE TB_USER SET USER_IDX = #{userIdx}
		]]>
		<if test="departmentIdx != null">
			, DEPARTMENT_IDX = #{departmentIdx}
		</if>
		<if test='userId != null'>
			, USER_ID = #{userId}
		</if>
		<if test="password != null">
			, PASSWORD = #{password}
		</if>
		<if test="userName != null">
			, USER_NAME = #{userName}
		</if>
		<if test="phone != null">
			, PHONE = #{phone}
		</if>
		<if test="mobile != null">
			, MOBILE = #{mobile}
		</if>
		<if test="email != null">
			, EMAIL = #{email}
		</if>
		<if test="grade != null">
			, GRADE = #{grade}
		</if>
		<if test="updateUserIdx != null">
			, UPDATE_USER_IDX = #{updateUserIdx}, UPDATE_DATE_TIME = #{updateDateTime}
		</if>
		<choose>
			<when test="deleteYN != null and deleteYN == 'Y'.toString()">
				, DELETE_YN = #{deleteYN}, DELETE_USER_IDX = #{deleteUserIdx}, DELETE_DATE_TIME = #{deleteDateTime}
			</when>
			<when test="deleteYN != null and deleteYN == 'N'.toString()">
				, DELETE_YN = #{deleteYN}, DELETE_USER_IDX = "", DELETE_DATE_TIME = ""
			</when>
		</choose>
		WHERE USER_IDX = #{userIdx}
	</select>

	<!-- 목록 -->
	<select id="all" resultMap="user">
		<![CDATA[
		SELECT
		 	T_USER.USER_IDX
		 	, T_USER.DEPARTMENT_IDX
		 	, T_USER.USER_ID
			, T_USER.USER_NAME
			, T_USER.PASSWORD
			, T_USER.PHONE
			, T_USER.MOBILE
			, T_USER.EMAIL
			, T_USER.GRADE
			, T_USER.DELETE_YN
			, T_USER.CREATE_USER_IDX
			, T_USER.UPDATE_USER_IDX
			, T_USER.DELETE_USER_IDX
			, T_USER.UPDATE_DATE_TIME
			, T_USER.CREATE_DATE_TIME
			, T_USER.DELETE_DATE_TIME
			, T_USER_CREATE.USER_NAME AS CREATE_USER_NAME
			, T_USER_UPDATE.USER_NAME AS UPDATE_USER_NAME
			, T_USER_DELETE.USER_NAME AS DELETE_USER_NAME
			, T_DEPARTMENT.DEPARTMENT_NAME
		FROM TB_USER AS T_USER
		LEFT JOIN TB_DEPARTMENT AS T_DEPARTMENT ON T_DEPARTMENT.DEPARTMENT_IDX = T_USER.DEPARTMENT_IDX
		LEFT JOIN TB_USER AS T_USER_CREATE ON T_USER_CREATE.USER_IDX = T_DEPARTMENT.CREATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_UPDATE ON T_USER_UPDATE.USER_IDX = T_DEPARTMENT.UPDATE_USER_IDX
		LEFT JOIN TB_USER AS T_USER_DELETE ON T_USER_DELETE.USER_IDX = T_DEPARTMENT.DELETE_USER_IDX
		WHERE 1=1
		]]>
		<if test="deleteYN != null">
			AND T_USER.DELETE_YN = #{deleteYN}
		</if>
		<if test="departmentIdx != null">
			AND T_USER.DEPARTMENT_IDX = #{departmentIdx}
		</if>
		<if test="grade != null">
			AND T_USER.GRADE = #{grade}
		</if>
		ORDER BY T_USER.USER_NAME DESC
	</select>

</mapper>
